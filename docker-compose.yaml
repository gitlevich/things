version: "2.4"

services:
  axonserver:
    hostname: axonserver
    user: root
    container_name: axonserver-things
    restart: always
    image: axoniq/axonserver:2023.1.2-jdk-17-dev
    environment:
      - LOCAL_AXONSERVER=axonserver
    ports:
      - "8024:8024"
      - "8124:8124"
      - "8224:8224"
    volumes:
      - ./deploy/local/axoniq:/axonserver/config:rw
      - axoniq_data:/axonserver/data:rw
    healthcheck:
      test: curl -f http://localhost:8024/actuator/health || exit 1;
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    hostname: postgres
    image: postgres:bullseye
    command: postgres -c 'max_connections=200'
    container_name: postgres-things
    restart: always
    environment:
      - POSTGRES_DB=things
      - PGUSER=things
      - POSTGRES_USER=things
      - POSTGRES_PASSWORD=things
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready"
      interval: 5s
      timeout: 10s
      retries: 3

  things:
    hostname: things
    container_name: things
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - AXON_AXONSERVER_SERVERS=axonserver
      - AXON_AXONSERVER_CONTEXT=things
    ports:
      - "8080:8080"
      - "8081:8081"
    build:
      context: ./
      dockerfile: ./Dockerfile
    depends_on:
      axonserver:
        condition: service_healthy

volumes:
  axoniq_data:
